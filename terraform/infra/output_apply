[0m[1mdata.terraform_remote_state.registry-terraform: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.infra-terraform: Reading...[0m[0m
[0m[1mdata.template_file.cloudinit: Reading...[0m[0m
[0m[1mdata.template_file.cloudinit: Read complete after 0s [id=8a25aabf55e9f010281bfd175444125d2b7cfe092dc82af1084eea062d632f96][0m
[0m[1mdata.yandex_compute_image.vm-image: Reading...[0m[0m
[0m[1mdata.terraform_remote_state.infra-terraform: Read complete after 0s[0m
[0m[1mdata.terraform_remote_state.registry-terraform: Read complete after 0s[0m
[0m[1mdata.yandex_compute_image.vm-image: Read complete after 0s [id=fd8i352834u7dsm7rfbv][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # local_file.ansible-inventory[0m will be created
[0m  [32m+[0m[0m resource "local_file" "ansible-inventory" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "../../ansible-playbook/inventory/hosts.yml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # local_file.external_gitlab_address[0m will be created
[0m  [32m+[0m[0m resource "local_file" "external_gitlab_address" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "../../ansible-playbook/group_vars/all/gitlab.yml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # local_file.local-address[0m will be created
[0m  [32m+[0m[0m resource "local_file" "local-address" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "../../ansible-playbook/group_vars/all/local_ip.yml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # yandex_compute_instance.gitlab[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "gitlab" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "gitlab-dip"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                
                users:
                  - name: aspire
                    sudo: ALL=(ALL) NOPASSWD:ALL
                    shell: /bin/bash
                    groups: sudo
                    lock_passwd: false
                    # password - netology-diplom
                    passwd: $6$OZQkmEcwM5bmFL8x$oq.8qh/tb1ypPCqLdQzUW8cA8R0s/4AvyfW7ol1yymWkiHQ78Pb1KRTjV3Vroji09S2nUD6RyXA0Q./h9UKF2.
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID0zEVOG2xlvsm1PmiFbKoTOdAgoskSLeau8RHz3/+ZG au@itoolabs.com
                package_update: true
                package_upgrade: false
                packages:
                  - vim
                  - yum-utils
                  - curl
                  - git
                  - wget
            EOT
        }
      [32m+[0m[0m name                      = "gitlab-dip"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v2"
      [32m+[0m[0m service_account_id        = "aje61rmrhg42dk5sja74"
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd87p9aiv8iscq5ncad8"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 35
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-ssd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 100
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 8
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.kube-node["0"][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "kube-node" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "k8s-node-01"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                
                users:
                  - name: aspire
                    sudo: ALL=(ALL) NOPASSWD:ALL
                    shell: /bin/bash
                    groups: sudo
                    lock_passwd: false
                    # password - netology-diplom
                    passwd: $6$OZQkmEcwM5bmFL8x$oq.8qh/tb1ypPCqLdQzUW8cA8R0s/4AvyfW7ol1yymWkiHQ78Pb1KRTjV3Vroji09S2nUD6RyXA0Q./h9UKF2.
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID0zEVOG2xlvsm1PmiFbKoTOdAgoskSLeau8RHz3/+ZG au@itoolabs.com
                package_update: true
                package_upgrade: false
                packages:
                  - vim
                  - yum-utils
                  - curl
                  - git
                  - wget
            EOT
        }
      [32m+[0m[0m name                      = "k8s-node-01"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v2"
      [32m+[0m[0m service_account_id        = "aje61rmrhg42dk5sja74"
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8i352834u7dsm7rfbv"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 30
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 8
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.kube-node["1"][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "kube-node" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "k8s-node-02"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                
                users:
                  - name: aspire
                    sudo: ALL=(ALL) NOPASSWD:ALL
                    shell: /bin/bash
                    groups: sudo
                    lock_passwd: false
                    # password - netology-diplom
                    passwd: $6$OZQkmEcwM5bmFL8x$oq.8qh/tb1ypPCqLdQzUW8cA8R0s/4AvyfW7ol1yymWkiHQ78Pb1KRTjV3Vroji09S2nUD6RyXA0Q./h9UKF2.
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID0zEVOG2xlvsm1PmiFbKoTOdAgoskSLeau8RHz3/+ZG au@itoolabs.com
                package_update: true
                package_upgrade: false
                packages:
                  - vim
                  - yum-utils
                  - curl
                  - git
                  - wget
            EOT
        }
      [32m+[0m[0m name                      = "k8s-node-02"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v2"
      [32m+[0m[0m service_account_id        = "aje61rmrhg42dk5sja74"
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8i352834u7dsm7rfbv"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 30
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 8
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.kube-node["2"][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "kube-node" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "k8s-node-03"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                
                users:
                  - name: aspire
                    sudo: ALL=(ALL) NOPASSWD:ALL
                    shell: /bin/bash
                    groups: sudo
                    lock_passwd: false
                    # password - netology-diplom
                    passwd: $6$OZQkmEcwM5bmFL8x$oq.8qh/tb1ypPCqLdQzUW8cA8R0s/4AvyfW7ol1yymWkiHQ78Pb1KRTjV3Vroji09S2nUD6RyXA0Q./h9UKF2.
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID0zEVOG2xlvsm1PmiFbKoTOdAgoskSLeau8RHz3/+ZG au@itoolabs.com
                package_update: true
                package_upgrade: false
                packages:
                  - vim
                  - yum-utils
                  - curl
                  - git
                  - wget
            EOT
        }
      [32m+[0m[0m name                      = "k8s-node-03"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v2"
      [32m+[0m[0m service_account_id        = "aje61rmrhg42dk5sja74"
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8i352834u7dsm7rfbv"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 30
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 8
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_vpc_network.k8s-network[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "k8s-network" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = "b1g3edgsv67oiqdg8t1f"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "k8s-network"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # yandex_vpc_subnet.k8s-subnet[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "k8s-subnet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "k8s-subnet"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.10.10.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m worker-1-local-address = (known after apply)
  [32m+[0m[0m worker-2-local-address = (known after apply)
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1myandex_vpc_network.k8s-network: Creating...[0m[0m
[0m[1myandex_vpc_network.k8s-network: Creation complete after 2s [id=enp336m6q6l8v4leikiu][0m
[0m[1myandex_vpc_subnet.k8s-subnet: Creating...[0m[0m
[0m[1myandex_vpc_subnet.k8s-subnet: Creation complete after 0s [id=e9bdacpak6211e4uo68j][0m
[0m[1myandex_compute_instance.kube-node["2"]: Creating...[0m[0m
[0m[1myandex_compute_instance.gitlab: Creating...[0m[0m
[0m[1myandex_compute_instance.kube-node["1"]: Creating...[0m[0m
[0m[1myandex_compute_instance.kube-node["0"]: Creating...[0m[0m
[0m[1myandex_compute_instance.kube-node["2"]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.kube-node["0"]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.kube-node["1"]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.gitlab: Still creating... [10s elapsed][0m[0m

Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...

Stopping operation...
